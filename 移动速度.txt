正常速度=1.0
慢行速度=0.52(BOT=0.4,最大值0.52)(预期步行速度=最大速度*cl_movespeedkey,若实际速度<=135,播放walk动画.)
蹲行速度=1/3
游泳速度=0.8

#if (AMXX_VERSION_NUM < 183)
static MaxClients, bool:gFreezePeriod;
#endif

public plugin_init()
{
	#if (AMXX_VERSION_NUM < 183)
	register_logevent("LogEvent_RoundStart", 2, "1=Round_Start");
	register_message(gMsgId_HLTV, "Msg_HLTV_Pre");
	MaxClients = get_maxplayers();
	#endif
}

#if (AMXX_VERSION_NUM < 183)
// 回合开始事件_后置挂钩:记录冻结期的结束状态
public LogEvent_RoundStart() gFreezePeriod = false;

// 屏幕调节事件_前置挂钩:在回合刷新时记录冻结期的开始状态
public Msg_HLTV_Pre(msgId, msgDest, msgEntId)
{
	// 两个参数都为0时,大概率是回合刷新时发送的屏幕调节消息.小概率是其它插件发送
	if (get_msg_arg_int(1)) return;
	if (get_msg_arg_int(2)) return;
	gFreezePeriod = 1 < MaxClients;
}

// 获取玩家的默认最大速度	182以上版本用ExecuteHamB(Ham_CS_Player_ResetMaxSpeed, playerEntId);
static Float:GetMaxSpeed(playerEntId)
{
	const m_iId		= 43;	// int
	const m_iWeaponState	= 74;	// int
	const m_pActiveItem	= 373;	// cbase
	const m_bIsVIP		= 837;	// BOOL(int)
	
	const WPNSTATE_SHIELD_DRAWN = 0b100000;
	
	// 若玩家是观察者
	if (pev(playerEntId, pev_iuser1)) return 900.0;
	
	// 若是在多人模式冻结时间内(182以上版本可用get_gamerules_int("CGameRules", "m_bFreezePeriod")代替)
	if (gFreezePeriod) return 1.0;
	
	// 若是VIP
	if (get_pdata_cbase(playerEntId, m_bIsVIP)) return 227.0;
	
	// 若是有武器
	new wpnEntId = get_pdata_cbase(playerEntId, m_pActiveItem);
	if (pev_valid(wpnEntId))
	{
		// 若是持盾
		if (get_pdata_int(wpnEntId, m_iWeaponState, 4) & WPNSTATE_SHIELD_DRAWN) return 180.0;
		
		#define FovReturn(%1,%2,%3)\
		new Float:fov;\
		pev(playerEntId, pev_fov, fov);\
		return fov == %1 ? %2 : %3
		
		switch (get_pdata_int(wpnEntId, m_iId, 4))
		{
			case CSW_SG552:	{ FovReturn(90.0, 235.0, 200.0); }
			case CSW_AK47:	return 221.0;
			case CSW_AUG:	return 240.0;
			case CSW_XM1014:return 240.0;
			case CSW_GALIL:	return 240.0;
			case CSW_FAMAS:	return 240.0;
			case CSW_AWP:	{ FovReturn(90.0, 210.0, 150.0); }
			case CSW_G3SG1:	{ FovReturn(90.0, 210.0, 150.0); }
			case CSW_SG550:	{ FovReturn(90.0, 210.0, 150.0); }
			case CSW_M249:	return 220.0;
			case CSW_M3:	return 230.0;
			case CSW_M4A1:	return 230.0;
			case CSW_P90:	return 245.0;
			case CSW_SCOUT:	{ FovReturn(90.0, 260.0, 220.0); }
			default:	return 250.0;
		}
	}
	
	// 若是空手
	return 240.0;
}
#endif
